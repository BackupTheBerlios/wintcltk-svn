--- ased3.0/ased.tcl.orig	Sat Nov 27 15:44:26 2004
+++ ased3.0/ased.tcl	Thu Nov  9 13:26:44 2006
@@ -166,7 +166,7 @@
     # normal start of ASED
     set libDir [file join $ASEDsRootDir lib]
     set auto_path [linsert $auto_path 0 "$libDir"]
-    package require -exact BWidget 1.7
+    package require -exact BWidget 1.8
     Bitmap::get cut
     # this used for loading Bitmap namespace into the interpetator
     namespace eval Bitmap {
--- ased3.0/create.tcl.orig	Sat Jun 19 12:24:46 2004
+++ ased3.0/create.tcl	Fri Mar 30 10:58:58 2007
@@ -416,9 +416,9 @@
             {separator}\
             [list command [tr "Goto Line ..."] {} [tr "Goto Line"] {} -command Editor::gotoLineDlg ]\
             {separator}\
-            [list command [tr "Search ..."] {} [tr "Search dialog"] {} -command Editor::search_dialog ]\
+            [list command [tr "Search ..."] {} [tr "Search dialog"] {Ctrl f} -command Editor::search_dialog ]\
             [list command [tr "Search in files ..."] {} [tr "Search in files"] {} -command Editor::findInFiles]\
-            [list command [tr "Replace ..."] {} [tr "Replace dialog"] {} -command Editor::replace_dialog ]\
+            [list command [tr "Replace ..."] {} [tr "Replace dialog"] {Ctrl r} -command Editor::replace_dialog ]\
             {separator}\
             [list command [tr "Undo"] {} [tr "Undo"] {CtrlAlt u} -command Editor::undo ]\
             [list command [tr "Redo"] {} [tr "Redo"] {} -command Editor::redo ]\
--- ased3.0/asedmain.tcl.orig	Fri Apr 13 12:39:29 2007
+++ ased3.0/asedmain.tcl	Fri Apr 13 12:40:44 2007
@@ -1415,8 +1415,8 @@
         set filePatternList [list [tr "All-Files {*}"]]
     }
     if {$EditorData(options,serverWish) != ""} {
-        set initialFile "$EditorData(options,serverWish)"
-        set initialDir [file dirname $EditorData(options,serverWish)]
+        set initialFile [lindex $EditorData(options,serverWish) 0]
+        set initialDir [file dirname [lindex $EditorData(options,serverWish) 0]]
     } else  {
         set initialFile [info nameofexecutable]
         set initialDir [file dirname [info nameofexecutable]]
@@ -1428,7 +1428,7 @@
             -initialfile "$initialFile" \
             -title [tr "Choose an Interpreter"]]
     if {$serverWish != {}} {
-        eval [list set EditorData(options,serverWish) $serverWish]
+        eval [list set EditorData(options,serverWish) [list "$serverWish"]]
     }
     return
 }
@@ -1481,12 +1481,12 @@
     }
     
     if {$EditorData(options,serverWish) == {}} {
-        eval [list set EditorData(options,serverWish) [info nameofexecutable]]
+        eval [list set EditorData(options,serverWish) [list [info nameofexecutable]]]
     }
     # if ased was updated and ased itself was choosen as executable (=default)
     # then update evalServer to the new version to avoid ased to hang
     if {[string first "ased" [file tail $EditorData(options,serverWish)]] == 0} {
-        eval [list set EditorData(options,serverWish) [info nameofexecutable]]
+        eval [list set EditorData(options,serverWish) [list [info nameofexecutable]]]
     }
     
     set cursor [. cget -cursor]
@@ -1575,7 +1575,7 @@
     interp eval $current(slave) set con_notebook $con_notebook
     interp eval $current(slave) set pagename $current(pagename)
     interp eval $current(slave) set port $EditorData(options,serverPort)
-    interp eval $current(slave) set serverWish \"$EditorData(options,serverWish)\"
+    interp eval $current(slave) set serverWish \"[lindex $EditorData(options,serverWish) 0]\"
     interp eval $current(slave) set starkitMode $EditorData(starkit)
     if {$EditorData(starkit)} {
         interp eval $current(slave) set starkitTopdir \"$::starkit::topdir\"
@@ -1622,7 +1622,7 @@
             eval [list set homeDir [file normalize ~]]
             if {[info nameofexecutable] == $starkitTopdir} {
                 # starpack-mode
-                if {$serverWish == [info nameofexecutable]} {
+                if {"$serverWish" == "[info nameofexecutable]"} {
                     # use ASED itself
                     eval [list set sock [Client::initExecutionClient \
                             localhost \
@@ -1660,7 +1660,7 @@
                 }
             } else {
                 # starkit-mode: use tclkit to execute
-                if {$serverWish == [info nameofexecutable]} {
+                if {"$serverWish" == "[info nameofexecutable]"} {
                     # starkitmode: use ASED to eval
                     eval [list set sock [Client::initExecutionClient \
                             localhost \
@@ -3753,7 +3753,7 @@
             }
             default {}
         }
-        set command [list $EditorData(options,serverWish) $filename ]
+        set command [list [lindex $EditorData(options,serverWish) 0] "$filename" ]
     }
     eval exec $command &
     return
--- ased3.0/tools/tcltutor/TclTutor.tcl.orig	Sat Jun 19 13:32:04 2004
+++ ased3.0/tools/tcltutor/TclTutor.tcl	Fri Apr 13 13:39:56 2007
@@ -167,24 +167,24 @@
 
     switch $tcl_platform(platform) {
       "unix"	{
-            set Tutor(sourceHome) [file dirname $argv0]
-            set Tutor(lessonHome) [file dirname $argv0]
+            set Tutor(sourceHome) [list [file dirname $argv0]]
+            set Tutor(lessonHome) [list [file dirname $argv0]]
 	    set Tutor(rcHome) $env(HOME)
             set Tutor(rcfile) [file join $Tutor(rcHome) .tcltutorrc]
             set Tutor(logFileName) [file join $Tutor(rcHome) .tcltutoract]
 	    set Tutor(fontMod) -4
        }
       "windows" 	{
-            set Tutor(sourceHome) [file attributes [file dirname $argv0] -shortname]
-            set Tutor(lessonHome) [file attributes [file dirname $argv0] -shortname]
+            set Tutor(sourceHome) [list [file dirname $argv0]]
+            set Tutor(lessonHome) [list [file dirname $argv0]]
 	    set Tutor(rcHome) [file normalize ~]
             set Tutor(rcfile) [file join $Tutor(rcHome) tcltutor.rc]
             set Tutor(logFileName) [file join $Tutor(rcHome) tcltutor.act]
 	    set Tutor(fontMod) -5
       }
       "mac"	{
-            set Tutor(sourceHome) [file dirname $argv0]
-            set Tutor(lessonHome) [file dirname $argv0]
+            set Tutor(sourceHome) [list [file dirname $argv0]]
+            set Tutor(lessonHome) [list [file dirname $argv0]]
 	    set Tutor(rcHome) [file dirname $argv0]
             set Tutor(rcfile) [file join $Tutor(rcHome) tcltutor.rc]
             set Tutor(logFileName) [file join $Tutor(rcHome) tcltutor.act]
@@ -222,7 +222,7 @@
 
 set Tutor(courseName) Tcl
 set Tutor(courseLevel) 1
-set Tutor(Tcl.lessonFile) [file join $Tutor(lessonHome) Tcl0.lsn]
+set Tutor(Tcl.lessonFile) [file join [lindex $Tutor(lessonHome) 0] Tcl0.lsn]
 set Tutor(geometry) "500x400"
 set Tutor(unique) 0
 set Tutor(interpreter) interp
@@ -295,7 +295,7 @@
 #  overhead.  This will work without making things complex.
 
 foreach f [list scaler.tcl htmllib.tcl] {
-    eval $Tutor(wrapNamespace)source [file join $Tutor(sourceHome) $f]
+    eval $Tutor(wrapNamespace)source [list [file join [lindex $Tutor(sourceHome) 0] $f]]
 }
 
 # Get the color for frames, and configure the primary window for that color.
@@ -343,7 +343,7 @@
           regsub ":TITLE:" $line "" line
 	  set Tutor(lsn.title) $line
           regsub ".*$Tutor(courseName)(\[0-9\]*).lsn" $file {\1} num
-	  lappend titlelist [list $num $file $Tutor(lsn.title)]
+	  lappend titlelist [list $num [list $file] $Tutor(lsn.title)]
 	  }
 	}
       }
@@ -376,7 +376,7 @@
   foreach file $filelist {
         set f [file tail $file]
         regsub {.cfg} $f "" courseName
-	lappend titlelist [list "" $file $courseName]
+	lappend titlelist [list "" [list $file] $courseName]
     }
   set Tutor(courseList) $titlelist;
   return $titlelist;
@@ -462,10 +462,10 @@
     set Tutor(courseName) [file root [file tail $cfgFileName]]
     getLessonTitles
     FillMenu .file.mnu.lessons $Tutor(lessonList) showLesson
-
     if {![info exists Tutor($Tutor(courseName).lessonFile)]} {
+
         set Tutor($Tutor(courseName).lessonFile) \
-	    [file join $Tutor(lessonHome) "$Tutor(courseName)0.lsn"]
+	    [file join [lindex $Tutor(lessonHome) 0] "$Tutor(courseName)0.lsn"]
     }
 
     showLesson $Tutor($Tutor(courseName).lessonFile)
@@ -731,7 +731,7 @@
     
     foreach n [count 0 2] t [list Help About] {
         .help.mnu add command -label $t -command "displayHtmlFile \
-	    [file join $Tutor(lessonHome) [string tolower $t].html]"
+	    [list [file join $Tutor(lessonHome) [string tolower $t].html]]"
     }
 
     
@@ -817,9 +817,8 @@
         incr index -1
     }
     set l [lindex $Tutor(lessonList) $index]
-
-    set Tutor($Tutor(courseName).lessonFile) [lindex $l 1]
-    showLesson [lindex $l 1]
+    set Tutor($Tutor(courseName).lessonFile) [lindex [lindex $l 1] 0]
+    showLesson [lindex [lindex $l 1] 0]
 }
 
 ################################################################
@@ -842,8 +841,8 @@
     }
     set l [lindex $Tutor(lessonList) $index]
 
-    set Tutor($Tutor(courseName).lessonFile) [lindex $l 1]
-    showLesson [lindex $l 1]
+    set Tutor($Tutor(courseName).lessonFile) [lindex [lindex $l 1] 0]
+    showLesson [lindex [lindex $l 1] 0]
 }
 
 
@@ -1381,4 +1380,4 @@
 
 bind . <Destroy> {if {[string match "." %W]} {SaveState; exit 0}}
 
-selectCourse [file join $Tutor(lessonHome) [format "%s.%s" $Tutor(courseName) cfg]]
+selectCourse [file join [lindex $Tutor(lessonHome) 0] [format "%s.%s" $Tutor(courseName) cfg]]
