# This TCL script is used by the freeWrap Makefile
#
# Purpose:
#     1) Create configuration file to be used at run-time by wrapped application.
#     2) Generate fwcrypt.h file
#
if {$argv == {}} {
    set hdrFile "fwcrypt.c"
    if {[catch {open $hdrFile w} fout]} {
        puts $fout
       } {
           set charset {0123456789@ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_}
           set maxpos [string length $charset]
           set keylen [expr 8 + int(8 * rand())]
           set curpwd {}
           puts $fout "/* Automatically generated by setinfo.tcl - [clock format [clock seconds]]"
           puts $fout {}
           puts $fout "   This file defines the function that returns the encryption password."
           puts $fout "   Its contents have been randomly generated to produce a password"
           puts $fout "   that is difficult to extract from the compiled binary file."
           puts $fout "*/"
           puts $fout {}
           puts $fout {char *getPwdKey(char *keybuf)}
           puts $fout "\{"
           puts $fout "int idx;"
           puts $fout {}
           puts $fout "for (idx=0; idx < $keylen; ++idx) \{"
           for {set idx 0} {$idx < $keylen} {incr idx} {
                set cval [string index $charset [expr int($maxpos * rand())]]
                scan $cval %c ival
                puts $fout "     keybuf\[$idx\] = $ival;"
                append curpwd $cval
               }
           puts $fout "  \}"
           puts $fout "keybuf\[$keylen\] = 0;"
           puts $fout {}
           puts $fout "return keybuf;"
           puts $fout "\}"
           close $fout
         }

    set pwdFile "currentPWD.txt"
    if {[catch {open $pwdFile w} fout]} {
        puts $fout
       } {
           puts $fout "$curpwd"
           close $fout
         }
   } {
       set dirpath [lindex $argv 0]
       set progName [lindex $argv 1]
       set pLevel [lindex $argv 2]
       set stubName [lindex $argv 3]
       set configFile [file join $dirpath _freewrap_init.txt]
       if {[catch {open $configFile w} fout]} {
           _freewrap_message {.} warning ok {freeWrap error!} "Error creating $configFile.\n\n$fout."
           return 1
          }
       puts $fout /freewrap.tcl
       puts $fout "$progName $pLevel"
       puts $fout [file size $stubName]
       close $fout
     }

exit

