--- util/pl/Mingw32.pl.orig	Mon Apr  2 10:43:07 2007
+++ util/pl/Mingw32.pl	Mon Apr  2 11:00:54 2007
@@ -6,11 +6,7 @@
 $o='/';
 $cp='cp';
 $rm='rm -f';
-$mkdir='gmkdir';
 
-$o='\\';
-$cp='copy';
-$rm='del';
 $mkdir='mkdir';
 
 # C compiler stuff
@@ -23,27 +19,27 @@
 
 if ($gaswin and !$no_asm)
 	{
-        $bn_asm_obj='$(OBJ_D)\bn-win32.o';
+        $bn_asm_obj='$(OBJ_D)/bn-win32.o';
         $bn_asm_src='crypto/bn/asm/bn-win32.s';
-        $bnco_asm_obj='$(OBJ_D)\co-win32.o';
+        $bnco_asm_obj='$(OBJ_D)/co-win32.o';
         $bnco_asm_src='crypto/bn/asm/co-win32.s';
-        $des_enc_obj='$(OBJ_D)\d-win32.o $(OBJ_D)\y-win32.o';
+        $des_enc_obj='$(OBJ_D)/d-win32.o $(OBJ_D)/y-win32.o';
         $des_enc_src='crypto/des/asm/d-win32.s crypto/des/asm/y-win32.s';
-        $bf_enc_obj='$(OBJ_D)\b-win32.o';
+        $bf_enc_obj='$(OBJ_D)/b-win32.o';
         $bf_enc_src='crypto/bf/asm/b-win32.s';
-#       $cast_enc_obj='$(OBJ_D)\c-win32.o';
+#       $cast_enc_obj='$(OBJ_D)/c-win32.o';
 #       $cast_enc_src='crypto/cast/asm/c-win32.s';
-        $rc4_enc_obj='$(OBJ_D)\r4-win32.o';
+        $rc4_enc_obj='$(OBJ_D)/r4-win32.o';
         $rc4_enc_src='crypto/rc4/asm/r4-win32.s';
-        $rc5_enc_obj='$(OBJ_D)\r5-win32.o';
+        $rc5_enc_obj='$(OBJ_D)/r5-win32.o';
         $rc5_enc_src='crypto/rc5/asm/r5-win32.s';
-        $md5_asm_obj='$(OBJ_D)\m5-win32.o';
+        $md5_asm_obj='$(OBJ_D)/m5-win32.o';
         $md5_asm_src='crypto/md5/asm/m5-win32.s';
-        $rmd160_asm_obj='$(OBJ_D)\rm-win32.o';
+        $rmd160_asm_obj='$(OBJ_D)/rm-win32.o';
         $rmd160_asm_src='crypto/ripemd/asm/rm-win32.s';
-        $sha1_asm_obj='$(OBJ_D)\s1-win32.o';
+        $sha1_asm_obj='$(OBJ_D)/s1-win32.o';
         $sha1_asm_src='crypto/sha/asm/s1-win32.s';
-	$cpuid_asm_obj='$(OBJ_D)\cpu-win32.o';
+	$cpuid_asm_obj='$(OBJ_D)/cpu-win32.o';
 	$cpuid_asm_src='crypto/cpu-win32.s';
 	$cflags.=" -DBN_ASM -DMD5_ASM -DSHA1_ASM -DOPENSSL_BN_ASM_PART_WORDS";
 	}
@@ -87,7 +83,7 @@
 	($Name=$name) =~ tr/a-z/A-Z/;
 
 	$ret.="$target: \$(${Name}OBJ)\n";
-	$ret.="\tif exist $target \$(RM) $target\n";
+	$ret.="\tif \[ -f $target \]\; then \$(RM) $target\; fi\n";
 	$ret.="\t\$(MKLIB) $target \$(${Name}OBJ)\n";
 	$ret.="\t\$(RANLIB) $target\n\n";
 	}
--- Configure.orig	Mon Apr  2 11:14:07 2007
+++ Configure	Mon Apr  2 11:14:19 2007
@@ -1814,6 +1814,6 @@
 
 sub is_msys
 	{
-	return 1 if (exists $ENV{"TERM"} && $ENV{"TERM"} eq "msys");
+#	return 1 if (exists $ENV{"TERM"} && $ENV{"TERM"} eq "msys");
 	return 0;
 	}
--- ms/mingw32.sh.orig	Mon Apr  2 11:31:16 2007
+++ ms/mingw32.sh	Mon Apr  2 11:31:00 2007
@@ -0,0 +1,88 @@
+# OpenSSL with Mingw32+GNU as
+# ---------------------------
+
+#perl Configure mingw $1 $2 $3 $4 $5 $6 $7 $8
+
+perl -e "exit 1 if '%1' eq 'no-asm'"
+if [ $? -ne 1 ]; then
+
+echo Generating x86 for GNU assember
+
+echo Bignum
+cd crypto/bn/asm
+perl bn-586.pl gaswin > bn-win32.s
+perl co-586.pl gaswin > co-win32.s
+cd ../../..
+
+echo DES
+cd crypto/des/asm
+perl des-586.pl gaswin > d-win32.s
+cd ../../..
+
+echo crypt
+cd crypto/des/asm
+perl crypt586.pl gaswin > y-win32.s
+cd ../../..
+
+echo Blowfish
+cd crypto/bf/asm
+perl bf-586.pl gaswin > b-win32.s
+cd ../../..
+
+echo CAST5
+cd crypto/cast/asm
+perl cast-586.pl gaswin > c-win32.s
+cd ../../..
+
+echo RC4
+cd crypto/rc4/asm
+perl rc4-586.pl gaswin > r4-win32.s
+cd ../../..
+
+echo MD5
+cd crypto/md5/asm
+perl md5-586.pl gaswin > m5-win32.s
+cd ../../..
+
+echo SHA1
+cd crypto/sha/asm
+perl sha1-586.pl gaswin > s1-win32.s
+cd ../../..
+
+echo RIPEMD160
+cd crypto/ripemd/asm
+perl rmd-586.pl gaswin > rm-win32.s
+cd ../../..
+
+echo RC5/32
+cd crypto/rc5/asm
+perl rc5-586.pl gaswin > r5-win32.s
+cd ../../..
+echo CPUID
+cd crypto
+perl x86cpuid.pl gaswin > cpu-win32.s
+cd ..
+
+fi
+
+echo Generating makefile
+perl util/mkfiles.pl >MINFO
+perl util/mk1mf.pl gaswin Mingw32 >ms/mingw32a.mak
+echo Generating DLL definition files
+perl util/mkdef.pl 32 libeay >ms/libeay32.def
+if [ $? -eq 1 ]; then exit 1; fi
+perl util/mkdef.pl 32 ssleay >ms/ssleay32.def
+if [ $? -eq 1 ]; then exit 1; fi
+
+echo Building the libraries
+mingw32-make -f ms/mingw32a.mak
+if [ $? -eq 1 ]; then exit 1; fi
+
+echo Generating the DLLs and input libraries
+windres -i ms/version32.rc -o out/version32.o
+dllwrap --dllname libeay32.dll --output-lib out/libeay32.a --def ms/libeay32.def out/libcrypto.a out/version32.o -lwsock32 -lgdi32
+if [ $? -eq 1 ]; then exit 1; fi
+dllwrap --dllname libssl32.dll --output-lib out/libssl32.a --def ms/ssleay32.def out/libssl.a out/libeay32.a out/version32.o
+if [ $? -eq 1 ]; then exit 1; fi
+
+echo Done compiling OpenSSL
